name: Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    name: "üîç Build"
    uses: vti-do2402/cicd-core/.github/workflows/ci-react.yml@main
    with:
      runs_on: ${{ vars.RUNS_ON }}
      node_version: ${{ vars.NODE_VERSION }}
      skip_sonar: true
      artifacts: ui-service
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  calculate-version:
    name: "üìù Version"
    needs: [build]
    permissions:
      contents: write
    uses: vti-do2402/cicd-core/.github/workflows/tag-and-release.yml@main
    with:
      runs_on: ${{ vars.RUNS_ON }}
      default_bump: ${{ vars.VERSION_BUMP_TYPE }}
      dry_run_tag: true
      draft_release: true
      artifacts: ui-service
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: "üöÄ Deploy"
    needs: [calculate-version]
    permissions:
      id-token: write
      contents: write
    uses: vti-do2402/cicd-core/.github/workflows/deploy-ecr.yml@main
    with:
      runs_on: ${{ vars.RUNS_ON }}
      environment: ${{ vars.ENVIRONMENT }}
      ecr_repository: ${{ vars.ECR_REPOSITORY }}
      workspace: ${{ vars.WORKSPACE }}
      image_tag: ${{ needs.calculate-version.outputs.new_tag }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  release:
    name: "üì¶ Release"
    needs: [deploy]
    permissions:
      contents: write
    uses: vti-do2402/cicd-core/.github/workflows/tag-and-release.yml@main
    with:
      runs_on: ${{ vars.RUNS_ON }}
      default_bump: ${{ vars.VERSION_BUMP_TYPE }}
      artifacts: ui-service
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
